//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("PatientPortalModel", "FK_Answer_Question", "Question", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PatientPortal.Entities.Entities.Question), "Answer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientPortal.Entities.Entities.Answer), true)]
[assembly: EdmRelationshipAttribute("PatientPortalModel", "FK_SurveyQuestionAnswer_Answer", "Answer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PatientPortal.Entities.Entities.Answer), "SurveyQuestionAnswer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientPortal.Entities.Entities.SurveyQuestionAnswer), true)]
[assembly: EdmRelationshipAttribute("PatientPortalModel", "FK_SurveyQuestionMap_Answer", "Answer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PatientPortal.Entities.Entities.Answer), "SurveyQuestionMap", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientPortal.Entities.Entities.SurveyQuestionMap), true)]
[assembly: EdmRelationshipAttribute("PatientPortalModel", "FK_Introduction_Language", "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PatientPortal.Entities.Entities.Language), "Introduction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientPortal.Entities.Entities.Introduction), true)]
[assembly: EdmRelationshipAttribute("PatientPortalModel", "FK_Product_Language", "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PatientPortal.Entities.Entities.Language), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientPortal.Entities.Entities.Product), true)]
[assembly: EdmRelationshipAttribute("PatientPortalModel", "FK_Question_Language", "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PatientPortal.Entities.Entities.Language), "Question", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientPortal.Entities.Entities.Question), true)]
[assembly: EdmRelationshipAttribute("PatientPortalModel", "FK_Survey_Language", "Language", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PatientPortal.Entities.Entities.Language), "Survey", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientPortal.Entities.Entities.Survey), true)]
[assembly: EdmRelationshipAttribute("PatientPortalModel", "FK_ProductImages_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PatientPortal.Entities.Entities.Product), "ProductImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientPortal.Entities.Entities.ProductImage), true)]
[assembly: EdmRelationshipAttribute("PatientPortalModel", "FK_SurveyQuestionMap_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PatientPortal.Entities.Entities.Product), "SurveyQuestionMap", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientPortal.Entities.Entities.SurveyQuestionMap), true)]
[assembly: EdmRelationshipAttribute("PatientPortalModel", "FK_Question_QuestionType", "QuestionType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PatientPortal.Entities.Entities.QuestionType), "Question", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientPortal.Entities.Entities.Question), true)]
[assembly: EdmRelationshipAttribute("PatientPortalModel", "FK_Question_TextInputType", "TextInputType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PatientPortal.Entities.Entities.TextInputType), "Question", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientPortal.Entities.Entities.Question), true)]
[assembly: EdmRelationshipAttribute("PatientPortalModel", "FK_SurveyQuestionAnswer_Question", "Question", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PatientPortal.Entities.Entities.Question), "SurveyQuestionAnswer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientPortal.Entities.Entities.SurveyQuestionAnswer), true)]
[assembly: EdmRelationshipAttribute("PatientPortalModel", "FK_SurveyQuestionMap_Question", "Question", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PatientPortal.Entities.Entities.Question), "SurveyQuestionMap", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientPortal.Entities.Entities.SurveyQuestionMap), true)]
[assembly: EdmRelationshipAttribute("PatientPortalModel", "FK_SurveyQuestionMap_Question1", "Question", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PatientPortal.Entities.Entities.Question), "SurveyQuestionMap", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientPortal.Entities.Entities.SurveyQuestionMap), true)]
[assembly: EdmRelationshipAttribute("PatientPortalModel", "FK_User_Role", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PatientPortal.Entities.Entities.Role), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientPortal.Entities.Entities.User), true)]
[assembly: EdmRelationshipAttribute("PatientPortalModel", "FK_TerritoriesEmail_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PatientPortal.Entities.Entities.State), "TerritoriesEmail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientPortal.Entities.Entities.TerritoriesEmail), true)]
[assembly: EdmRelationshipAttribute("PatientPortalModel", "FK_UserDetail_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PatientPortal.Entities.Entities.State), "UserDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientPortal.Entities.Entities.UserDetail), true)]
[assembly: EdmRelationshipAttribute("PatientPortalModel", "FK_SurveyQuestionAnswer_Survey", "Survey", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PatientPortal.Entities.Entities.Survey), "SurveyQuestionAnswer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientPortal.Entities.Entities.SurveyQuestionAnswer), true)]
[assembly: EdmRelationshipAttribute("PatientPortalModel", "FK_SurveyQuestionMap_Survey", "Survey", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PatientPortal.Entities.Entities.Survey), "SurveyQuestionMap", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientPortal.Entities.Entities.SurveyQuestionMap), true)]
[assembly: EdmRelationshipAttribute("PatientPortalModel", "FK_SurveyQuestionAnswer_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PatientPortal.Entities.Entities.User), "SurveyQuestionAnswer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientPortal.Entities.Entities.SurveyQuestionAnswer), true)]
[assembly: EdmRelationshipAttribute("PatientPortalModel", "FK_SurveyQuestionMap_SurveyQuestionMap", "SurveyQuestionMap", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PatientPortal.Entities.Entities.SurveyQuestionMap), "SurveyQuestionMap1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientPortal.Entities.Entities.SurveyQuestionMap), true)]
[assembly: EdmRelationshipAttribute("PatientPortalModel", "FK_UserDetail_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PatientPortal.Entities.Entities.User), "UserDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PatientPortal.Entities.Entities.UserDetail), true)]

#endregion

namespace PatientPortal.Entities.Entities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PatientPortalEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PatientPortalEntities object using the connection string found in the 'PatientPortalEntities' section of the application configuration file.
        /// </summary>
        public PatientPortalEntities() : base("name=PatientPortalEntities", "PatientPortalEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PatientPortalEntities object.
        /// </summary>
        public PatientPortalEntities(string connectionString) : base(connectionString, "PatientPortalEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PatientPortalEntities object.
        /// </summary>
        public PatientPortalEntities(EntityConnection connection) : base(connection, "PatientPortalEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Answer> Answers
        {
            get
            {
                if ((_Answers == null))
                {
                    _Answers = base.CreateObjectSet<Answer>("Answers");
                }
                return _Answers;
            }
        }
        private ObjectSet<Answer> _Answers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Introduction> Introductions
        {
            get
            {
                if ((_Introductions == null))
                {
                    _Introductions = base.CreateObjectSet<Introduction>("Introductions");
                }
                return _Introductions;
            }
        }
        private ObjectSet<Introduction> _Introductions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Language> Languages
        {
            get
            {
                if ((_Languages == null))
                {
                    _Languages = base.CreateObjectSet<Language>("Languages");
                }
                return _Languages;
            }
        }
        private ObjectSet<Language> _Languages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductImage> ProductImages
        {
            get
            {
                if ((_ProductImages == null))
                {
                    _ProductImages = base.CreateObjectSet<ProductImage>("ProductImages");
                }
                return _ProductImages;
            }
        }
        private ObjectSet<ProductImage> _ProductImages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Question> Questions
        {
            get
            {
                if ((_Questions == null))
                {
                    _Questions = base.CreateObjectSet<Question>("Questions");
                }
                return _Questions;
            }
        }
        private ObjectSet<Question> _Questions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<QuestionType> QuestionTypes
        {
            get
            {
                if ((_QuestionTypes == null))
                {
                    _QuestionTypes = base.CreateObjectSet<QuestionType>("QuestionTypes");
                }
                return _QuestionTypes;
            }
        }
        private ObjectSet<QuestionType> _QuestionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<State> States
        {
            get
            {
                if ((_States == null))
                {
                    _States = base.CreateObjectSet<State>("States");
                }
                return _States;
            }
        }
        private ObjectSet<State> _States;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Survey> Surveys
        {
            get
            {
                if ((_Surveys == null))
                {
                    _Surveys = base.CreateObjectSet<Survey>("Surveys");
                }
                return _Surveys;
            }
        }
        private ObjectSet<Survey> _Surveys;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SurveyQuestionAnswer> SurveyQuestionAnswers
        {
            get
            {
                if ((_SurveyQuestionAnswers == null))
                {
                    _SurveyQuestionAnswers = base.CreateObjectSet<SurveyQuestionAnswer>("SurveyQuestionAnswers");
                }
                return _SurveyQuestionAnswers;
            }
        }
        private ObjectSet<SurveyQuestionAnswer> _SurveyQuestionAnswers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SurveyQuestionMap> SurveyQuestionMaps
        {
            get
            {
                if ((_SurveyQuestionMaps == null))
                {
                    _SurveyQuestionMaps = base.CreateObjectSet<SurveyQuestionMap>("SurveyQuestionMaps");
                }
                return _SurveyQuestionMaps;
            }
        }
        private ObjectSet<SurveyQuestionMap> _SurveyQuestionMaps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TerritoriesEmail> TerritoriesEmails
        {
            get
            {
                if ((_TerritoriesEmails == null))
                {
                    _TerritoriesEmails = base.CreateObjectSet<TerritoriesEmail>("TerritoriesEmails");
                }
                return _TerritoriesEmails;
            }
        }
        private ObjectSet<TerritoriesEmail> _TerritoriesEmails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TextInputType> TextInputTypes
        {
            get
            {
                if ((_TextInputTypes == null))
                {
                    _TextInputTypes = base.CreateObjectSet<TextInputType>("TextInputTypes");
                }
                return _TextInputTypes;
            }
        }
        private ObjectSet<TextInputType> _TextInputTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserDetail> UserDetails
        {
            get
            {
                if ((_UserDetails == null))
                {
                    _UserDetails = base.CreateObjectSet<UserDetail>("UserDetails");
                }
                return _UserDetails;
            }
        }
        private ObjectSet<UserDetail> _UserDetails;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Answers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAnswers(Answer answer)
        {
            base.AddObject("Answers", answer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Introductions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIntroductions(Introduction introduction)
        {
            base.AddObject("Introductions", introduction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Languages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLanguages(Language language)
        {
            base.AddObject("Languages", language);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductImages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductImages(ProductImage productImage)
        {
            base.AddObject("ProductImages", productImage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Questions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestions(Question question)
        {
            base.AddObject("Questions", question);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the QuestionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestionTypes(QuestionType questionType)
        {
            base.AddObject("QuestionTypes", questionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the States EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStates(State state)
        {
            base.AddObject("States", state);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Surveys EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSurveys(Survey survey)
        {
            base.AddObject("Surveys", survey);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SurveyQuestionAnswers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSurveyQuestionAnswers(SurveyQuestionAnswer surveyQuestionAnswer)
        {
            base.AddObject("SurveyQuestionAnswers", surveyQuestionAnswer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SurveyQuestionMaps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSurveyQuestionMaps(SurveyQuestionMap surveyQuestionMap)
        {
            base.AddObject("SurveyQuestionMaps", surveyQuestionMap);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TerritoriesEmails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTerritoriesEmails(TerritoriesEmail territoriesEmail)
        {
            base.AddObject("TerritoriesEmails", territoriesEmail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TextInputTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTextInputTypes(TextInputType textInputType)
        {
            base.AddObject("TextInputTypes", textInputType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserDetails(UserDetail userDetail)
        {
            base.AddObject("UserDetails", userDetail);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientPortalModel", Name="Answer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Answer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Answer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="questionId">Initial value of the QuestionId property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static Answer CreateAnswer(global::System.Int32 id, global::System.Int32 questionId, global::System.String title, global::System.DateTime createdDate)
        {
            Answer answer = new Answer();
            answer.Id = id;
            answer.QuestionId = questionId;
            answer.Title = title;
            answer.CreatedDate = createdDate;
            return answer;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionId
        {
            get
            {
                return _QuestionId;
            }
            set
            {
                OnQuestionIdChanging(value);
                ReportPropertyChanging("QuestionId");
                _QuestionId = StructuralObject.SetValidValue(value, "QuestionId");
                ReportPropertyChanged("QuestionId");
                OnQuestionIdChanged();
            }
        }
        private global::System.Int32 _QuestionId;
        partial void OnQuestionIdChanging(global::System.Int32 value);
        partial void OnQuestionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ToolTip
        {
            get
            {
                return _ToolTip;
            }
            set
            {
                OnToolTipChanging(value);
                ReportPropertyChanging("ToolTip");
                _ToolTip = StructuralObject.SetValidValue(value, true, "ToolTip");
                ReportPropertyChanged("ToolTip");
                OnToolTipChanged();
            }
        }
        private global::System.String _ToolTip;
        partial void OnToolTipChanging(global::System.String value);
        partial void OnToolTipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImagePath
        {
            get
            {
                return _ImagePath;
            }
            set
            {
                OnImagePathChanging(value);
                ReportPropertyChanging("ImagePath");
                _ImagePath = StructuralObject.SetValidValue(value, true, "ImagePath");
                ReportPropertyChanged("ImagePath");
                OnImagePathChanged();
            }
        }
        private global::System.String _ImagePath;
        partial void OnImagePathChanging(global::System.String value);
        partial void OnImagePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value, "ModifiedDate");
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_Answer_Question", "Question")]
        public Question Question
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("PatientPortalModel.FK_Answer_Question", "Question").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("PatientPortalModel.FK_Answer_Question", "Question").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Question> QuestionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("PatientPortalModel.FK_Answer_Question", "Question");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Question>("PatientPortalModel.FK_Answer_Question", "Question", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_SurveyQuestionAnswer_Answer", "SurveyQuestionAnswer")]
        public EntityCollection<SurveyQuestionAnswer> SurveyQuestionAnswers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SurveyQuestionAnswer>("PatientPortalModel.FK_SurveyQuestionAnswer_Answer", "SurveyQuestionAnswer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SurveyQuestionAnswer>("PatientPortalModel.FK_SurveyQuestionAnswer_Answer", "SurveyQuestionAnswer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_SurveyQuestionMap_Answer", "SurveyQuestionMap")]
        public EntityCollection<SurveyQuestionMap> SurveyQuestionMaps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SurveyQuestionMap>("PatientPortalModel.FK_SurveyQuestionMap_Answer", "SurveyQuestionMap");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SurveyQuestionMap>("PatientPortalModel.FK_SurveyQuestionMap_Answer", "SurveyQuestionMap", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientPortalModel", Name="Introduction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Introduction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Introduction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="languageId">Initial value of the LanguageId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Introduction CreateIntroduction(global::System.Int32 id, global::System.Int32 languageId, global::System.String description)
        {
            Introduction introduction = new Introduction();
            introduction.Id = id;
            introduction.LanguageId = languageId;
            introduction.Description = description;
            return introduction;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                OnLanguageIdChanging(value);
                ReportPropertyChanging("LanguageId");
                _LanguageId = StructuralObject.SetValidValue(value, "LanguageId");
                ReportPropertyChanged("LanguageId");
                OnLanguageIdChanged();
            }
        }
        private global::System.Int32 _LanguageId;
        partial void OnLanguageIdChanging(global::System.Int32 value);
        partial void OnLanguageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImagePath
        {
            get
            {
                return _ImagePath;
            }
            set
            {
                OnImagePathChanging(value);
                ReportPropertyChanging("ImagePath");
                _ImagePath = StructuralObject.SetValidValue(value, true, "ImagePath");
                ReportPropertyChanged("ImagePath");
                OnImagePathChanged();
            }
        }
        private global::System.String _ImagePath;
        partial void OnImagePathChanging(global::System.String value);
        partial void OnImagePathChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_Introduction_Language", "Language")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("PatientPortalModel.FK_Introduction_Language", "Language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("PatientPortalModel.FK_Introduction_Language", "Language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("PatientPortalModel.FK_Introduction_Language", "Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("PatientPortalModel.FK_Introduction_Language", "Language", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientPortalModel", Name="Language")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Language : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Language object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="cultureCode">Initial value of the CultureCode property.</param>
        public static Language CreateLanguage(global::System.Int32 id, global::System.String name, global::System.String cultureCode)
        {
            Language language = new Language();
            language.Id = id;
            language.Name = name;
            language.CultureCode = cultureCode;
            return language;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CultureCode
        {
            get
            {
                return _CultureCode;
            }
            set
            {
                OnCultureCodeChanging(value);
                ReportPropertyChanging("CultureCode");
                _CultureCode = StructuralObject.SetValidValue(value, false, "CultureCode");
                ReportPropertyChanged("CultureCode");
                OnCultureCodeChanged();
            }
        }
        private global::System.String _CultureCode;
        partial void OnCultureCodeChanging(global::System.String value);
        partial void OnCultureCodeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_Introduction_Language", "Introduction")]
        public EntityCollection<Introduction> Introductions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Introduction>("PatientPortalModel.FK_Introduction_Language", "Introduction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Introduction>("PatientPortalModel.FK_Introduction_Language", "Introduction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_Product_Language", "Product")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("PatientPortalModel.FK_Product_Language", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("PatientPortalModel.FK_Product_Language", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_Question_Language", "Question")]
        public EntityCollection<Question> Questions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Question>("PatientPortalModel.FK_Question_Language", "Question");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Question>("PatientPortalModel.FK_Question_Language", "Question", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_Survey_Language", "Survey")]
        public EntityCollection<Survey> Surveys
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Survey>("PatientPortalModel.FK_Survey_Language", "Survey");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Survey>("PatientPortalModel.FK_Survey_Language", "Survey", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientPortalModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="languageId">Initial value of the LanguageId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static Product CreateProduct(global::System.Int32 id, global::System.String name, global::System.Int32 languageId, global::System.DateTime createdDate)
        {
            Product product = new Product();
            product.Id = id;
            product.Name = name;
            product.LanguageId = languageId;
            product.CreatedDate = createdDate;
            return product;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductURL
        {
            get
            {
                return _ProductURL;
            }
            set
            {
                OnProductURLChanging(value);
                ReportPropertyChanging("ProductURL");
                _ProductURL = StructuralObject.SetValidValue(value, true, "ProductURL");
                ReportPropertyChanged("ProductURL");
                OnProductURLChanged();
            }
        }
        private global::System.String _ProductURL;
        partial void OnProductURLChanging(global::System.String value);
        partial void OnProductURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                OnLanguageIdChanging(value);
                ReportPropertyChanging("LanguageId");
                _LanguageId = StructuralObject.SetValidValue(value, "LanguageId");
                ReportPropertyChanged("LanguageId");
                OnLanguageIdChanged();
            }
        }
        private global::System.Int32 _LanguageId;
        partial void OnLanguageIdChanging(global::System.Int32 value);
        partial void OnLanguageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value, "ModifiedDate");
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_Product_Language", "Language")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("PatientPortalModel.FK_Product_Language", "Language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("PatientPortalModel.FK_Product_Language", "Language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("PatientPortalModel.FK_Product_Language", "Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("PatientPortalModel.FK_Product_Language", "Language", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_ProductImages_Product", "ProductImage")]
        public EntityCollection<ProductImage> ProductImages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProductImage>("PatientPortalModel.FK_ProductImages_Product", "ProductImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProductImage>("PatientPortalModel.FK_ProductImages_Product", "ProductImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_SurveyQuestionMap_Product", "SurveyQuestionMap")]
        public EntityCollection<SurveyQuestionMap> SurveyQuestionMaps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SurveyQuestionMap>("PatientPortalModel.FK_SurveyQuestionMap_Product", "SurveyQuestionMap");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SurveyQuestionMap>("PatientPortalModel.FK_SurveyQuestionMap_Product", "SurveyQuestionMap", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientPortalModel", Name="ProductImage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductImage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductImage object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="productId">Initial value of the ProductId property.</param>
        /// <param name="isPrimary">Initial value of the IsPrimary property.</param>
        public static ProductImage CreateProductImage(global::System.Int32 id, global::System.Int32 productId, global::System.Boolean isPrimary)
        {
            ProductImage productImage = new ProductImage();
            productImage.Id = id;
            productImage.ProductId = productId;
            productImage.IsPrimary = isPrimary;
            return productImage;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value, "ProductId");
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private global::System.Int32 _ProductId;
        partial void OnProductIdChanging(global::System.Int32 value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImagePath
        {
            get
            {
                return _ImagePath;
            }
            set
            {
                OnImagePathChanging(value);
                ReportPropertyChanging("ImagePath");
                _ImagePath = StructuralObject.SetValidValue(value, true, "ImagePath");
                ReportPropertyChanged("ImagePath");
                OnImagePathChanged();
            }
        }
        private global::System.String _ImagePath;
        partial void OnImagePathChanging(global::System.String value);
        partial void OnImagePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ThumbnailPath
        {
            get
            {
                return _ThumbnailPath;
            }
            set
            {
                OnThumbnailPathChanging(value);
                ReportPropertyChanging("ThumbnailPath");
                _ThumbnailPath = StructuralObject.SetValidValue(value, true, "ThumbnailPath");
                ReportPropertyChanged("ThumbnailPath");
                OnThumbnailPathChanged();
            }
        }
        private global::System.String _ThumbnailPath;
        partial void OnThumbnailPathChanging(global::System.String value);
        partial void OnThumbnailPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPrimary
        {
            get
            {
                return _IsPrimary;
            }
            set
            {
                OnIsPrimaryChanging(value);
                ReportPropertyChanging("IsPrimary");
                _IsPrimary = StructuralObject.SetValidValue(value, "IsPrimary");
                ReportPropertyChanged("IsPrimary");
                OnIsPrimaryChanged();
            }
        }
        private global::System.Boolean _IsPrimary;
        partial void OnIsPrimaryChanging(global::System.Boolean value);
        partial void OnIsPrimaryChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_ProductImages_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("PatientPortalModel.FK_ProductImages_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("PatientPortalModel.FK_ProductImages_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("PatientPortalModel.FK_ProductImages_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("PatientPortalModel.FK_ProductImages_Product", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientPortalModel", Name="Question")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Question : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Question object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="isMandatary">Initial value of the IsMandatary property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="questionTypeId">Initial value of the QuestionTypeId property.</param>
        /// <param name="languageId">Initial value of the LanguageId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static Question CreateQuestion(global::System.Int32 id, global::System.String title, global::System.Boolean isMandatary, global::System.Boolean isActive, global::System.Int32 questionTypeId, global::System.Int32 languageId, global::System.DateTime createdDate)
        {
            Question question = new Question();
            question.Id = id;
            question.Title = title;
            question.IsMandatary = isMandatary;
            question.IsActive = isActive;
            question.QuestionTypeId = questionTypeId;
            question.LanguageId = languageId;
            question.CreatedDate = createdDate;
            return question;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMandatary
        {
            get
            {
                return _IsMandatary;
            }
            set
            {
                OnIsMandataryChanging(value);
                ReportPropertyChanging("IsMandatary");
                _IsMandatary = StructuralObject.SetValidValue(value, "IsMandatary");
                ReportPropertyChanged("IsMandatary");
                OnIsMandataryChanged();
            }
        }
        private global::System.Boolean _IsMandatary;
        partial void OnIsMandataryChanging(global::System.Boolean value);
        partial void OnIsMandataryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionTypeId
        {
            get
            {
                return _QuestionTypeId;
            }
            set
            {
                OnQuestionTypeIdChanging(value);
                ReportPropertyChanging("QuestionTypeId");
                _QuestionTypeId = StructuralObject.SetValidValue(value, "QuestionTypeId");
                ReportPropertyChanged("QuestionTypeId");
                OnQuestionTypeIdChanged();
            }
        }
        private global::System.Int32 _QuestionTypeId;
        partial void OnQuestionTypeIdChanging(global::System.Int32 value);
        partial void OnQuestionTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                OnLanguageIdChanging(value);
                ReportPropertyChanging("LanguageId");
                _LanguageId = StructuralObject.SetValidValue(value, "LanguageId");
                ReportPropertyChanged("LanguageId");
                OnLanguageIdChanged();
            }
        }
        private global::System.Int32 _LanguageId;
        partial void OnLanguageIdChanging(global::System.Int32 value);
        partial void OnLanguageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TextInputTypeId
        {
            get
            {
                return _TextInputTypeId;
            }
            set
            {
                OnTextInputTypeIdChanging(value);
                ReportPropertyChanging("TextInputTypeId");
                _TextInputTypeId = StructuralObject.SetValidValue(value, "TextInputTypeId");
                ReportPropertyChanged("TextInputTypeId");
                OnTextInputTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TextInputTypeId;
        partial void OnTextInputTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnTextInputTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value, "ModifiedDate");
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_Answer_Question", "Answer")]
        public EntityCollection<Answer> Answers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Answer>("PatientPortalModel.FK_Answer_Question", "Answer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Answer>("PatientPortalModel.FK_Answer_Question", "Answer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_Question_Language", "Language")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("PatientPortalModel.FK_Question_Language", "Language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("PatientPortalModel.FK_Question_Language", "Language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("PatientPortalModel.FK_Question_Language", "Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("PatientPortalModel.FK_Question_Language", "Language", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_Question_QuestionType", "QuestionType")]
        public QuestionType QuestionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionType>("PatientPortalModel.FK_Question_QuestionType", "QuestionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionType>("PatientPortalModel.FK_Question_QuestionType", "QuestionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<QuestionType> QuestionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<QuestionType>("PatientPortalModel.FK_Question_QuestionType", "QuestionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<QuestionType>("PatientPortalModel.FK_Question_QuestionType", "QuestionType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_Question_TextInputType", "TextInputType")]
        public TextInputType TextInputType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TextInputType>("PatientPortalModel.FK_Question_TextInputType", "TextInputType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TextInputType>("PatientPortalModel.FK_Question_TextInputType", "TextInputType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TextInputType> TextInputTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TextInputType>("PatientPortalModel.FK_Question_TextInputType", "TextInputType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TextInputType>("PatientPortalModel.FK_Question_TextInputType", "TextInputType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_SurveyQuestionAnswer_Question", "SurveyQuestionAnswer")]
        public EntityCollection<SurveyQuestionAnswer> SurveyQuestionAnswers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SurveyQuestionAnswer>("PatientPortalModel.FK_SurveyQuestionAnswer_Question", "SurveyQuestionAnswer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SurveyQuestionAnswer>("PatientPortalModel.FK_SurveyQuestionAnswer_Question", "SurveyQuestionAnswer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_SurveyQuestionMap_Question", "SurveyQuestionMap")]
        public EntityCollection<SurveyQuestionMap> SurveyQuestionMaps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SurveyQuestionMap>("PatientPortalModel.FK_SurveyQuestionMap_Question", "SurveyQuestionMap");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SurveyQuestionMap>("PatientPortalModel.FK_SurveyQuestionMap_Question", "SurveyQuestionMap", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_SurveyQuestionMap_Question1", "SurveyQuestionMap")]
        public EntityCollection<SurveyQuestionMap> SurveyQuestionMaps1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SurveyQuestionMap>("PatientPortalModel.FK_SurveyQuestionMap_Question1", "SurveyQuestionMap");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SurveyQuestionMap>("PatientPortalModel.FK_SurveyQuestionMap_Question1", "SurveyQuestionMap", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientPortalModel", Name="QuestionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class QuestionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new QuestionType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static QuestionType CreateQuestionType(global::System.Int32 id, global::System.String type)
        {
            QuestionType questionType = new QuestionType();
            questionType.Id = id;
            questionType.Type = type;
            return questionType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false, "Type");
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_Question_QuestionType", "Question")]
        public EntityCollection<Question> Questions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Question>("PatientPortalModel.FK_Question_QuestionType", "Question");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Question>("PatientPortalModel.FK_Question_QuestionType", "Question", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientPortalModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static Role CreateRole(global::System.Int32 id, global::System.String type)
        {
            Role role = new Role();
            role.Id = id;
            role.Type = type;
            return role;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false, "Type");
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_User_Role", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("PatientPortalModel.FK_User_Role", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("PatientPortalModel.FK_User_Role", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientPortalModel", Name="State")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class State : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new State object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static State CreateState(global::System.Int32 id, global::System.String name)
        {
            State state = new State();
            state.Id = id;
            state.Name = name;
            return state;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, true, "Code");
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_TerritoriesEmail_State", "TerritoriesEmail")]
        public EntityCollection<TerritoriesEmail> TerritoriesEmails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TerritoriesEmail>("PatientPortalModel.FK_TerritoriesEmail_State", "TerritoriesEmail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TerritoriesEmail>("PatientPortalModel.FK_TerritoriesEmail_State", "TerritoriesEmail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_UserDetail_State", "UserDetail")]
        public EntityCollection<UserDetail> UserDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserDetail>("PatientPortalModel.FK_UserDetail_State", "UserDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserDetail>("PatientPortalModel.FK_UserDetail_State", "UserDetail", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientPortalModel", Name="Survey")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Survey : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Survey object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="languageId">Initial value of the LanguageId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static Survey CreateSurvey(global::System.Int32 id, global::System.String name, global::System.Boolean isActive, global::System.Int32 languageId, global::System.DateTime createdDate)
        {
            Survey survey = new Survey();
            survey.Id = id;
            survey.Name = name;
            survey.IsActive = isActive;
            survey.LanguageId = languageId;
            survey.CreatedDate = createdDate;
            return survey;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LanguageId
        {
            get
            {
                return _LanguageId;
            }
            set
            {
                OnLanguageIdChanging(value);
                ReportPropertyChanging("LanguageId");
                _LanguageId = StructuralObject.SetValidValue(value, "LanguageId");
                ReportPropertyChanged("LanguageId");
                OnLanguageIdChanged();
            }
        }
        private global::System.Int32 _LanguageId;
        partial void OnLanguageIdChanging(global::System.Int32 value);
        partial void OnLanguageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value, "ModifiedDate");
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_Survey_Language", "Language")]
        public Language Language
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("PatientPortalModel.FK_Survey_Language", "Language").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("PatientPortalModel.FK_Survey_Language", "Language").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Language> LanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Language>("PatientPortalModel.FK_Survey_Language", "Language");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Language>("PatientPortalModel.FK_Survey_Language", "Language", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_SurveyQuestionAnswer_Survey", "SurveyQuestionAnswer")]
        public EntityCollection<SurveyQuestionAnswer> SurveyQuestionAnswers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SurveyQuestionAnswer>("PatientPortalModel.FK_SurveyQuestionAnswer_Survey", "SurveyQuestionAnswer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SurveyQuestionAnswer>("PatientPortalModel.FK_SurveyQuestionAnswer_Survey", "SurveyQuestionAnswer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_SurveyQuestionMap_Survey", "SurveyQuestionMap")]
        public EntityCollection<SurveyQuestionMap> SurveyQuestionMaps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SurveyQuestionMap>("PatientPortalModel.FK_SurveyQuestionMap_Survey", "SurveyQuestionMap");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SurveyQuestionMap>("PatientPortalModel.FK_SurveyQuestionMap_Survey", "SurveyQuestionMap", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientPortalModel", Name="SurveyQuestionAnswer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SurveyQuestionAnswer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SurveyQuestionAnswer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="surveyId">Initial value of the SurveyId property.</param>
        /// <param name="questionId">Initial value of the QuestionId property.</param>
        /// <param name="guid">Initial value of the Guid property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static SurveyQuestionAnswer CreateSurveyQuestionAnswer(global::System.Int32 id, global::System.Int32 surveyId, global::System.Int32 questionId, global::System.Guid guid, global::System.DateTime createdDate)
        {
            SurveyQuestionAnswer surveyQuestionAnswer = new SurveyQuestionAnswer();
            surveyQuestionAnswer.Id = id;
            surveyQuestionAnswer.SurveyId = surveyId;
            surveyQuestionAnswer.QuestionId = questionId;
            surveyQuestionAnswer.Guid = guid;
            surveyQuestionAnswer.CreatedDate = createdDate;
            return surveyQuestionAnswer;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SurveyId
        {
            get
            {
                return _SurveyId;
            }
            set
            {
                OnSurveyIdChanging(value);
                ReportPropertyChanging("SurveyId");
                _SurveyId = StructuralObject.SetValidValue(value, "SurveyId");
                ReportPropertyChanged("SurveyId");
                OnSurveyIdChanged();
            }
        }
        private global::System.Int32 _SurveyId;
        partial void OnSurveyIdChanging(global::System.Int32 value);
        partial void OnSurveyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionId
        {
            get
            {
                return _QuestionId;
            }
            set
            {
                OnQuestionIdChanging(value);
                ReportPropertyChanging("QuestionId");
                _QuestionId = StructuralObject.SetValidValue(value, "QuestionId");
                ReportPropertyChanged("QuestionId");
                OnQuestionIdChanged();
            }
        }
        private global::System.Int32 _QuestionId;
        partial void OnQuestionIdChanging(global::System.Int32 value);
        partial void OnQuestionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AnswerId
        {
            get
            {
                return _AnswerId;
            }
            set
            {
                OnAnswerIdChanging(value);
                ReportPropertyChanging("AnswerId");
                _AnswerId = StructuralObject.SetValidValue(value, "AnswerId");
                ReportPropertyChanged("AnswerId");
                OnAnswerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AnswerId;
        partial void OnAnswerIdChanging(Nullable<global::System.Int32> value);
        partial void OnAnswerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TextInput
        {
            get
            {
                return _TextInput;
            }
            set
            {
                OnTextInputChanging(value);
                ReportPropertyChanging("TextInput");
                _TextInput = StructuralObject.SetValidValue(value, true, "TextInput");
                ReportPropertyChanged("TextInput");
                OnTextInputChanged();
            }
        }
        private global::System.String _TextInput;
        partial void OnTextInputChanging(global::System.String value);
        partial void OnTextInputChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, "Guid");
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.Guid _Guid;
        partial void OnGuidChanging(global::System.Guid value);
        partial void OnGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value, "ProductId");
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductId;
        partial void OnProductIdChanging(Nullable<global::System.Int32> value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value, "ModifiedDate");
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_SurveyQuestionAnswer_Answer", "Answer")]
        public Answer Answer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Answer>("PatientPortalModel.FK_SurveyQuestionAnswer_Answer", "Answer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Answer>("PatientPortalModel.FK_SurveyQuestionAnswer_Answer", "Answer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Answer> AnswerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Answer>("PatientPortalModel.FK_SurveyQuestionAnswer_Answer", "Answer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Answer>("PatientPortalModel.FK_SurveyQuestionAnswer_Answer", "Answer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_SurveyQuestionAnswer_Question", "Question")]
        public Question Question
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("PatientPortalModel.FK_SurveyQuestionAnswer_Question", "Question").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("PatientPortalModel.FK_SurveyQuestionAnswer_Question", "Question").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Question> QuestionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("PatientPortalModel.FK_SurveyQuestionAnswer_Question", "Question");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Question>("PatientPortalModel.FK_SurveyQuestionAnswer_Question", "Question", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_SurveyQuestionAnswer_Survey", "Survey")]
        public Survey Survey
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Survey>("PatientPortalModel.FK_SurveyQuestionAnswer_Survey", "Survey").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Survey>("PatientPortalModel.FK_SurveyQuestionAnswer_Survey", "Survey").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Survey> SurveyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Survey>("PatientPortalModel.FK_SurveyQuestionAnswer_Survey", "Survey");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Survey>("PatientPortalModel.FK_SurveyQuestionAnswer_Survey", "Survey", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_SurveyQuestionAnswer_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("PatientPortalModel.FK_SurveyQuestionAnswer_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("PatientPortalModel.FK_SurveyQuestionAnswer_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("PatientPortalModel.FK_SurveyQuestionAnswer_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("PatientPortalModel.FK_SurveyQuestionAnswer_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientPortalModel", Name="SurveyQuestionMap")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SurveyQuestionMap : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SurveyQuestionMap object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="surveyId">Initial value of the SurveyId property.</param>
        /// <param name="questionId">Initial value of the QuestionId property.</param>
        /// <param name="answerId">Initial value of the AnswerId property.</param>
        /// <param name="questionOrderNumber">Initial value of the QuestionOrderNumber property.</param>
        public static SurveyQuestionMap CreateSurveyQuestionMap(global::System.Int32 id, global::System.Int32 surveyId, global::System.Int32 questionId, global::System.Int32 answerId, global::System.Int32 questionOrderNumber)
        {
            SurveyQuestionMap surveyQuestionMap = new SurveyQuestionMap();
            surveyQuestionMap.Id = id;
            surveyQuestionMap.SurveyId = surveyId;
            surveyQuestionMap.QuestionId = questionId;
            surveyQuestionMap.AnswerId = answerId;
            surveyQuestionMap.QuestionOrderNumber = questionOrderNumber;
            return surveyQuestionMap;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SurveyId
        {
            get
            {
                return _SurveyId;
            }
            set
            {
                OnSurveyIdChanging(value);
                ReportPropertyChanging("SurveyId");
                _SurveyId = StructuralObject.SetValidValue(value, "SurveyId");
                ReportPropertyChanged("SurveyId");
                OnSurveyIdChanged();
            }
        }
        private global::System.Int32 _SurveyId;
        partial void OnSurveyIdChanging(global::System.Int32 value);
        partial void OnSurveyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionId
        {
            get
            {
                return _QuestionId;
            }
            set
            {
                OnQuestionIdChanging(value);
                ReportPropertyChanging("QuestionId");
                _QuestionId = StructuralObject.SetValidValue(value, "QuestionId");
                ReportPropertyChanged("QuestionId");
                OnQuestionIdChanged();
            }
        }
        private global::System.Int32 _QuestionId;
        partial void OnQuestionIdChanging(global::System.Int32 value);
        partial void OnQuestionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AnswerId
        {
            get
            {
                return _AnswerId;
            }
            set
            {
                OnAnswerIdChanging(value);
                ReportPropertyChanging("AnswerId");
                _AnswerId = StructuralObject.SetValidValue(value, "AnswerId");
                ReportPropertyChanged("AnswerId");
                OnAnswerIdChanged();
            }
        }
        private global::System.Int32 _AnswerId;
        partial void OnAnswerIdChanging(global::System.Int32 value);
        partial void OnAnswerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductId
        {
            get
            {
                return _ProductId;
            }
            set
            {
                OnProductIdChanging(value);
                ReportPropertyChanging("ProductId");
                _ProductId = StructuralObject.SetValidValue(value, "ProductId");
                ReportPropertyChanged("ProductId");
                OnProductIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductId;
        partial void OnProductIdChanging(Nullable<global::System.Int32> value);
        partial void OnProductIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ChildQuestionId
        {
            get
            {
                return _ChildQuestionId;
            }
            set
            {
                OnChildQuestionIdChanging(value);
                ReportPropertyChanging("ChildQuestionId");
                _ChildQuestionId = StructuralObject.SetValidValue(value, "ChildQuestionId");
                ReportPropertyChanged("ChildQuestionId");
                OnChildQuestionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ChildQuestionId;
        partial void OnChildQuestionIdChanging(Nullable<global::System.Int32> value);
        partial void OnChildQuestionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionOrderNumber
        {
            get
            {
                return _QuestionOrderNumber;
            }
            set
            {
                OnQuestionOrderNumberChanging(value);
                ReportPropertyChanging("QuestionOrderNumber");
                _QuestionOrderNumber = StructuralObject.SetValidValue(value, "QuestionOrderNumber");
                ReportPropertyChanged("QuestionOrderNumber");
                OnQuestionOrderNumberChanged();
            }
        }
        private global::System.Int32 _QuestionOrderNumber;
        partial void OnQuestionOrderNumberChanging(global::System.Int32 value);
        partial void OnQuestionOrderNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SurveyQuestionMapId
        {
            get
            {
                return _SurveyQuestionMapId;
            }
            set
            {
                OnSurveyQuestionMapIdChanging(value);
                ReportPropertyChanging("SurveyQuestionMapId");
                _SurveyQuestionMapId = StructuralObject.SetValidValue(value, "SurveyQuestionMapId");
                ReportPropertyChanged("SurveyQuestionMapId");
                OnSurveyQuestionMapIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SurveyQuestionMapId;
        partial void OnSurveyQuestionMapIdChanging(Nullable<global::System.Int32> value);
        partial void OnSurveyQuestionMapIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IsMainNode
        {
            get
            {
                return _IsMainNode;
            }
            set
            {
                OnIsMainNodeChanging(value);
                ReportPropertyChanging("IsMainNode");
                _IsMainNode = StructuralObject.SetValidValue(value, "IsMainNode");
                ReportPropertyChanged("IsMainNode");
                OnIsMainNodeChanged();
            }
        }
        private Nullable<global::System.Int32> _IsMainNode;
        partial void OnIsMainNodeChanging(Nullable<global::System.Int32> value);
        partial void OnIsMainNodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SameQuestionNumber
        {
            get
            {
                return _SameQuestionNumber;
            }
            set
            {
                OnSameQuestionNumberChanging(value);
                ReportPropertyChanging("SameQuestionNumber");
                _SameQuestionNumber = StructuralObject.SetValidValue(value, "SameQuestionNumber");
                ReportPropertyChanged("SameQuestionNumber");
                OnSameQuestionNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _SameQuestionNumber;
        partial void OnSameQuestionNumberChanging(Nullable<global::System.Int32> value);
        partial void OnSameQuestionNumberChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_SurveyQuestionMap_Answer", "Answer")]
        public Answer Answer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Answer>("PatientPortalModel.FK_SurveyQuestionMap_Answer", "Answer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Answer>("PatientPortalModel.FK_SurveyQuestionMap_Answer", "Answer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Answer> AnswerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Answer>("PatientPortalModel.FK_SurveyQuestionMap_Answer", "Answer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Answer>("PatientPortalModel.FK_SurveyQuestionMap_Answer", "Answer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_SurveyQuestionMap_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("PatientPortalModel.FK_SurveyQuestionMap_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("PatientPortalModel.FK_SurveyQuestionMap_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("PatientPortalModel.FK_SurveyQuestionMap_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("PatientPortalModel.FK_SurveyQuestionMap_Product", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_SurveyQuestionMap_Question", "Question")]
        public Question Question
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("PatientPortalModel.FK_SurveyQuestionMap_Question", "Question").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("PatientPortalModel.FK_SurveyQuestionMap_Question", "Question").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Question> QuestionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("PatientPortalModel.FK_SurveyQuestionMap_Question", "Question");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Question>("PatientPortalModel.FK_SurveyQuestionMap_Question", "Question", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_SurveyQuestionMap_Question1", "Question")]
        public Question Question1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("PatientPortalModel.FK_SurveyQuestionMap_Question1", "Question").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("PatientPortalModel.FK_SurveyQuestionMap_Question1", "Question").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Question> Question1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("PatientPortalModel.FK_SurveyQuestionMap_Question1", "Question");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Question>("PatientPortalModel.FK_SurveyQuestionMap_Question1", "Question", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_SurveyQuestionMap_Survey", "Survey")]
        public Survey Survey
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Survey>("PatientPortalModel.FK_SurveyQuestionMap_Survey", "Survey").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Survey>("PatientPortalModel.FK_SurveyQuestionMap_Survey", "Survey").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Survey> SurveyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Survey>("PatientPortalModel.FK_SurveyQuestionMap_Survey", "Survey");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Survey>("PatientPortalModel.FK_SurveyQuestionMap_Survey", "Survey", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_SurveyQuestionMap_SurveyQuestionMap", "SurveyQuestionMap1")]
        public EntityCollection<SurveyQuestionMap> SurveyQuestionMap1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SurveyQuestionMap>("PatientPortalModel.FK_SurveyQuestionMap_SurveyQuestionMap", "SurveyQuestionMap1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SurveyQuestionMap>("PatientPortalModel.FK_SurveyQuestionMap_SurveyQuestionMap", "SurveyQuestionMap1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_SurveyQuestionMap_SurveyQuestionMap", "SurveyQuestionMap")]
        public SurveyQuestionMap SurveyQuestionMap2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SurveyQuestionMap>("PatientPortalModel.FK_SurveyQuestionMap_SurveyQuestionMap", "SurveyQuestionMap").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SurveyQuestionMap>("PatientPortalModel.FK_SurveyQuestionMap_SurveyQuestionMap", "SurveyQuestionMap").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SurveyQuestionMap> SurveyQuestionMap2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SurveyQuestionMap>("PatientPortalModel.FK_SurveyQuestionMap_SurveyQuestionMap", "SurveyQuestionMap");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SurveyQuestionMap>("PatientPortalModel.FK_SurveyQuestionMap_SurveyQuestionMap", "SurveyQuestionMap", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientPortalModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value, "principal_id");
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value, "diagram_id");
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, "version");
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true, "definition");
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientPortalModel", Name="TerritoriesEmail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TerritoriesEmail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TerritoriesEmail object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="stateId">Initial value of the StateId property.</param>
        /// <param name="emailId">Initial value of the EmailId property.</param>
        public static TerritoriesEmail CreateTerritoriesEmail(global::System.Int32 id, global::System.Int32 stateId, global::System.String emailId)
        {
            TerritoriesEmail territoriesEmail = new TerritoriesEmail();
            territoriesEmail.Id = id;
            territoriesEmail.StateId = stateId;
            territoriesEmail.EmailId = emailId;
            return territoriesEmail;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                OnStateIdChanging(value);
                ReportPropertyChanging("StateId");
                _StateId = StructuralObject.SetValidValue(value, "StateId");
                ReportPropertyChanged("StateId");
                OnStateIdChanged();
            }
        }
        private global::System.Int32 _StateId;
        partial void OnStateIdChanging(global::System.Int32 value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailId
        {
            get
            {
                return _EmailId;
            }
            set
            {
                OnEmailIdChanging(value);
                ReportPropertyChanging("EmailId");
                _EmailId = StructuralObject.SetValidValue(value, false, "EmailId");
                ReportPropertyChanged("EmailId");
                OnEmailIdChanged();
            }
        }
        private global::System.String _EmailId;
        partial void OnEmailIdChanging(global::System.String value);
        partial void OnEmailIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_TerritoriesEmail_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("PatientPortalModel.FK_TerritoriesEmail_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("PatientPortalModel.FK_TerritoriesEmail_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("PatientPortalModel.FK_TerritoriesEmail_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("PatientPortalModel.FK_TerritoriesEmail_State", "State", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientPortalModel", Name="TextInputType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TextInputType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TextInputType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="inputType">Initial value of the InputType property.</param>
        public static TextInputType CreateTextInputType(global::System.Int32 id, global::System.String inputType)
        {
            TextInputType textInputType = new TextInputType();
            textInputType.Id = id;
            textInputType.InputType = inputType;
            return textInputType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InputType
        {
            get
            {
                return _InputType;
            }
            set
            {
                OnInputTypeChanging(value);
                ReportPropertyChanging("InputType");
                _InputType = StructuralObject.SetValidValue(value, false, "InputType");
                ReportPropertyChanged("InputType");
                OnInputTypeChanged();
            }
        }
        private global::System.String _InputType;
        partial void OnInputTypeChanging(global::System.String value);
        partial void OnInputTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_Question_TextInputType", "Question")]
        public EntityCollection<Question> Questions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Question>("PatientPortalModel.FK_Question_TextInputType", "Question");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Question>("PatientPortalModel.FK_Question_TextInputType", "Question", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientPortalModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String userName, global::System.String password, global::System.Int32 roleId, global::System.Boolean isActive, global::System.Boolean isDeleted, global::System.DateTime createdDate)
        {
            User user = new User();
            user.Id = id;
            user.UserName = userName;
            user.Password = password;
            user.RoleId = roleId;
            user.IsActive = isActive;
            user.IsDeleted = isDeleted;
            user.CreatedDate = createdDate;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value, "RoleId");
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value, "IsDeleted");
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value, "ModifiedDate");
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_User_Role", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("PatientPortalModel.FK_User_Role", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("PatientPortalModel.FK_User_Role", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("PatientPortalModel.FK_User_Role", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("PatientPortalModel.FK_User_Role", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_SurveyQuestionAnswer_User", "SurveyQuestionAnswer")]
        public EntityCollection<SurveyQuestionAnswer> SurveyQuestionAnswers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SurveyQuestionAnswer>("PatientPortalModel.FK_SurveyQuestionAnswer_User", "SurveyQuestionAnswer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SurveyQuestionAnswer>("PatientPortalModel.FK_SurveyQuestionAnswer_User", "SurveyQuestionAnswer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_UserDetail_User", "UserDetail")]
        public EntityCollection<UserDetail> UserDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserDetail>("PatientPortalModel.FK_UserDetail_User", "UserDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserDetail>("PatientPortalModel.FK_UserDetail_User", "UserDetail", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PatientPortalModel", Name="UserDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserDetail object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="businessName">Initial value of the BusinessName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="stateId">Initial value of the StateId property.</param>
        /// <param name="zipCode">Initial value of the ZipCode property.</param>
        /// <param name="emailId">Initial value of the EmailId property.</param>
        /// <param name="phoneNumber">Initial value of the PhoneNumber property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="isReqForPromotions">Initial value of the IsReqForPromotions property.</param>
        public static UserDetail CreateUserDetail(global::System.Int32 id, global::System.String businessName, global::System.String firstName, global::System.String lastName, global::System.Int32 stateId, global::System.String zipCode, global::System.String emailId, global::System.String phoneNumber, global::System.DateTime createdDate, global::System.Boolean isReqForPromotions)
        {
            UserDetail userDetail = new UserDetail();
            userDetail.Id = id;
            userDetail.BusinessName = businessName;
            userDetail.FirstName = firstName;
            userDetail.LastName = lastName;
            userDetail.StateId = stateId;
            userDetail.ZipCode = zipCode;
            userDetail.EmailId = emailId;
            userDetail.PhoneNumber = phoneNumber;
            userDetail.CreatedDate = createdDate;
            userDetail.IsReqForPromotions = isReqForPromotions;
            return userDetail;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BusinessName
        {
            get
            {
                return _BusinessName;
            }
            set
            {
                OnBusinessNameChanging(value);
                ReportPropertyChanging("BusinessName");
                _BusinessName = StructuralObject.SetValidValue(value, false, "BusinessName");
                ReportPropertyChanged("BusinessName");
                OnBusinessNameChanged();
            }
        }
        private global::System.String _BusinessName;
        partial void OnBusinessNameChanging(global::System.String value);
        partial void OnBusinessNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                OnStateIdChanging(value);
                ReportPropertyChanging("StateId");
                _StateId = StructuralObject.SetValidValue(value, "StateId");
                ReportPropertyChanged("StateId");
                OnStateIdChanged();
            }
        }
        private global::System.Int32 _StateId;
        partial void OnStateIdChanging(global::System.Int32 value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ZipCode
        {
            get
            {
                return _ZipCode;
            }
            set
            {
                OnZipCodeChanging(value);
                ReportPropertyChanging("ZipCode");
                _ZipCode = StructuralObject.SetValidValue(value, false, "ZipCode");
                ReportPropertyChanged("ZipCode");
                OnZipCodeChanged();
            }
        }
        private global::System.String _ZipCode;
        partial void OnZipCodeChanging(global::System.String value);
        partial void OnZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailId
        {
            get
            {
                return _EmailId;
            }
            set
            {
                OnEmailIdChanging(value);
                ReportPropertyChanging("EmailId");
                _EmailId = StructuralObject.SetValidValue(value, false, "EmailId");
                ReportPropertyChanged("EmailId");
                OnEmailIdChanged();
            }
        }
        private global::System.String _EmailId;
        partial void OnEmailIdChanging(global::System.String value);
        partial void OnEmailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, false, "PhoneNumber");
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value, "CreatedDate");
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value, "ModifiedDate");
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsReqForPromotions
        {
            get
            {
                return _IsReqForPromotions;
            }
            set
            {
                OnIsReqForPromotionsChanging(value);
                ReportPropertyChanging("IsReqForPromotions");
                _IsReqForPromotions = StructuralObject.SetValidValue(value, "IsReqForPromotions");
                ReportPropertyChanged("IsReqForPromotions");
                OnIsReqForPromotionsChanged();
            }
        }
        private global::System.Boolean _IsReqForPromotions;
        partial void OnIsReqForPromotionsChanging(global::System.Boolean value);
        partial void OnIsReqForPromotionsChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_UserDetail_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("PatientPortalModel.FK_UserDetail_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("PatientPortalModel.FK_UserDetail_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("PatientPortalModel.FK_UserDetail_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("PatientPortalModel.FK_UserDetail_State", "State", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PatientPortalModel", "FK_UserDetail_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("PatientPortalModel.FK_UserDetail_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("PatientPortalModel.FK_UserDetail_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("PatientPortalModel.FK_UserDetail_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("PatientPortalModel.FK_UserDetail_User", "User", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
